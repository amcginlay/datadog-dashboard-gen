box: golang
build:
  # The steps that will be executed on build
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace
    - wercker/golint:
        exclude: "^vendor\\|fakes"

    # Get the dependencies
    - script:
        name: go get
        code: |
          export GO15VENDOREXPERIMENT=1
          cd $WERCKER_SOURCE_DIR
          go version
          go get github.com/Masterminds/glide
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
          glide --version
          glide install

    # Test the project
    - script:
        name: go test
        code: |
          LOG_LEVEL=debug go test $(glide novendor) -v -cover -race

    - script:
        name: set release id variable for version
        code: |
          go get github.com/xchapter7x/versioning
          export WERCKER_GITHUB_CREATE_RELEASE_ID=`versioning bump_patch`

    - script:
        name: compile for all platforms
        code: |
          GOOS=darwin go build -o datadog-dashboard-gen-osx -ldflags "-X main.Version=${WERCKER_GITHUB_CREATE_RELEASE_ID}-`git rev-parse HEAD | cut -c1-6`" main.go
          GOOS=linux go build -o datadog-dashboard-gen-linux -ldflags "-X main.Version=${WERCKER_GITHUB_CREATE_RELEASE_ID}-`git rev-parse HEAD | cut -c1-6`" main.go
          GOOS=windows go build -o datadog-dashboard-gen-win -ldflags "-X main.Version=${WERCKER_GITHUB_CREATE_RELEASE_ID}-`git rev-parse HEAD | cut -c1-6`" main.go

    - script:
        name: add repo to artifact
        code: |
          cp -R ./ ${WERCKER_OUTPUT_DIR}

deploy-pre-release:
  steps:
    - setup-go-workspace
    - script:
        name: install-packages
        code: |
          sudo apt-get install -y openssh-client wget
          echo ${WERCKER_OUTPUT_DIR}
          ls -la ${WERCKER_OUTPUT_DIR}

    - wercker/add-ssh-key@1.0.2:
        keyname: PCF_GITHUB_KEY

    - wercker/add-to-known_hosts@1.4.0:
        hostname: github.com
        fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48

    - script:
        name: set release id variable for version
        code: |
          go get github.com/xchapter7x/versioning
          export WERCKER_GITHUB_CREATE_RELEASE_ID=`versioning bump_patch`-`git rev-parse HEAD | cut -c1-6`

    - github-create-release:
        token: $GITHUB_TOKEN
        tag: $WERCKER_GITHUB_CREATE_RELEASE_ID
        title: datadog-dashboard-gen $WERCKER_GITHUB_CREATE_RELEASE_ID
        draft: true
        prerelease: ${IS_PRE_RELEASE}

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: datadog-dashboard-gen-osx
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: datadog-dashboard-gen-linux
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: datadog-dashboard-gen-win
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip
